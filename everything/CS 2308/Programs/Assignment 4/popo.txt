/****************************************************
File Name: assign5_cbh65.cpp

Author: Cole Hurst
Date: 4.16.2018
Assignment Number: 5
CS 2308.262 Spring 2018
Lecture Instructor: Yijuan Lu


*****************************************************/

#include<iostream>
#include<iomanip>
using namespace std;

#include "ListDriver.cpp"

int StringList :: count()
{
    StringNode *p;
    p = head;
    int listcount = 0;
    while(p != NULL)
    {
        p = p->next;
        listcount++;
    }
    return listcount;
}

void StringList :: add(string)
{

}

void StringList:: display()
{
    StringNode *p;
    p = head;
    while(p != NULL)
    {
        cout << p->data << endl;
    }
}

void StringList :: sort()
{
    StringNode *newHead = NULL;
    string minData = "NULL";

    while (head != NULL)
        {
            minData = minimum();
            if(minData == "NULL")
                cout << "The old list was empty." << endl;
            remove (minData);

            if(newHead == NULL)
            {
                StringNode *newN = new StringNode;
                newN->data = minData;
                newN->next = NULL;
                newHead = newN;
            }
            else
            {
                StringNode *newN = new StringNode;
                newN->data = minData;
                newN->next = NULL;
                StringNode *p = newHead;

                while(p->next != NULL)
                    p = p->next;

                p->next = newN;
            }
        }
}



// File Name: ListDriver.cpp
//
// Author: Yijuan Lu
// Assignment Number: 5
// CS 2308
// Instructor: Yijuan Lu
//
// A demo driver for StringList.
//

#include<iostream>
#include<iomanip>
using namespace std;

#include "StringList.h"

int main()
{
    //testing StringList
    StringList slist;

    string movie1 = "Star Wars";
    string movie2 = "Fargo";
    string movie3 = "Back to the Future";
    string movie4 = "Titanic";

    // Testing add/display/count
    cout << "Testing add/display/count: " << endl;
    cout << "count is: " << slist.count() << endl;

    slist.add(movie1);
    slist.display();
    cout << "count is: " << slist.count() << endl;

//    slist.add(movie2);
//    slist.display();
//    cout << "count is: " << slist.count() << endl;
//
//    slist.add(movie3);
//    slist.add(movie4);
//    slist.display();
//    cout << "count is: " << slist.count() << endl;
//
//    // Testing remove
//    cout << endl;
//    cout << "Testing remove: " << endl;
//    bool delResult;
//    delResult = slist.remove(movie4);
//    cout << "remove result movie4 = " << boolalpha << delResult << endl;
//
//    delResult = slist.remove(movie3);
//    cout << "remove result movie3 = " << boolalpha << delResult << endl;
//
//    delResult = slist.remove("Not There");
//    cout << "remove result Not There = " << boolalpha << delResult << endl;
//
//    cout << "display after remove: " << endl;
//    slist.display();
//    cout << "count is: " << slist.count() << endl;
//
//    // Testing minimum
//    cout << endl;
//    cout << "Testing minimum: " << endl;
//
//    cout << "Test minimum 1: " << endl;
//    slist.display();
//    cout << "minimum: " << boolalpha << slist.minimum() << endl;
//
//    cout << "Test minimum 2: " << endl;
//    slist.add(movie4);
//    slist.display();
//    cout << "minimum: " << boolalpha << slist.minimum() << endl;
//
//    cout << "Test minimum 3: " << endl;
//    slist.add(movie3);
//    slist.display();
//    cout << "minimum: " << boolalpha << slist.minimum() << endl;
//
//    //Testing sort and display
//    cout << endl;
//    cout << "Testing sort/display: " << endl;
//    slist.sort();
//    slist.display();
//
//
//    cout << endl;
//    cout << "Testing sort/display after add: " << endl;
//    slist.add("Jurassic Park");
//    slist.display();
//    cout << "now sorted: " << endl;
//    slist.sort();
//    slist.display();


}




// File Name: StringList.h
//
// Author: Yijuan Lu
// Assignment Number: 5
// CS 2308
// Instructor: Yijuan Lu
//
// Represents a list of strings.
// Supports adding and removing strings, displaying and sorting strings,
// finding the minimum and count of the number of strings in the list.

#include <string>
using namespace std;

class StringList
{
  private:
    struct StringNode          // the Nodes of the linked list
    {
        string data;           // data is a string
        StringNode *next;      // points to next node in list
    };

    StringNode *head;           // the head pointer

  public:
    StringList();
    ~StringList();

    int count();
    void add(string);
    bool remove(string);
    void display();
    string minimum();
    void sort();
};
